version: '3.8'

services:

  php-app:
    build: .
    container_name: php_app
    ports:
      - "${APP_PORT}:80"
    env_file: .env
    volumes:
      - ./src:/var/www/html/public
      - ./uploads:/var/www/html/public/uploads
      - ./:/home/app
      - ./composer.lock:/var/www/html/composer.lock
      - ./composer.json:/var/www/html/composer.json
      - ./vendor:/var/www/html/public/vendor
      - ./tests:/var/www/html/tests
    depends_on:
      - postgres-db

    environment:
      DATABASE_HOST: postgres-db
      DATABASE_USER: ${POSTGRES_USER}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_NAME: ${POSTGRES_DB}
      APACHE_DOCUMENT_ROOT: /var/www/html/public
    networks:
      - tienda-network

  postgres-db:
    image: postgres:12-alpine
    container_name: postgres_db
    env_file: .env
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - tienda-network

  adminer:
    image: adminer
    container_name: adminer
    env_file: .env
    ports:
      - "8081:8080"
    depends_on:
      - postgres-db
    networks:
      - tienda-network

volumes:
  db_data:
  uploads:

networks:
  tienda-network:
    driver: bridge